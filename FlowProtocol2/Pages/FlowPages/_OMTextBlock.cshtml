@using FlowProtocol2.Core;
@model OMTextBlock;
@if (@Model != null)
{
    @if (Model.BlockType == OutputType.Paragraph)
    {
        <p>
            @foreach (var tl in Model.TextLines)
            {
                @foreach (var te in tl.TextElements)
                    @await Html.PartialAsync("_OMTextElement", te)
                <br>
                @foreach (var sb in tl.Subblocks)
                    @await Html.PartialAsync("_OMTextBlock", sb)
            }
        </p>
    }
    else if (Model.BlockType == OutputType.Listing)
    {
        <ul>
            @foreach (var tl in Model.TextLines)
            {
                <li>
                    @foreach (var te in tl.TextElements)
                        @await Html.PartialAsync("_OMTextElement", te)
                    @foreach (var sb in tl.Subblocks)
                        @await Html.PartialAsync("_OMTextBlock", sb)
                </li>
            }
        </ul>
    }
    else if (Model.BlockType == OutputType.Enumeration)
    {
        <ol type="@Model.NumerationType">
            @foreach (var tl in Model.TextLines)
            {
                <li>
                    @foreach (var te in tl.TextElements)
                        @await Html.PartialAsync("_OMTextElement", te)
                    @foreach (var sb in tl.Subblocks)
                        @await Html.PartialAsync("_OMTextBlock", sb)
                </li>
            }
        </ol>
    }
    else if (Model.BlockType == OutputType.Code)
    {
        <pre><code id="example1">@Model.Codeblock</code></pre>
        <button onclick="CopyFunction()">In Zwischenablage kopieren</button>
        <script>
        function CopyFunction() {
            // get the container
            const element = document.querySelector('#example1');
            // Create a fake `textarea` and set the contents to the text
            // you want to copy
            const storage = document.createElement('textarea');
            storage.value = element.innerHTML;
            element.appendChild(storage);
            // Copy the text in the fake `textarea` and remove the `textarea`
            storage.select();
            storage.setSelectionRange(0, 99999);
            document.execCommand('copy');
            element.removeChild(storage);
            }
        </script>
    }
}